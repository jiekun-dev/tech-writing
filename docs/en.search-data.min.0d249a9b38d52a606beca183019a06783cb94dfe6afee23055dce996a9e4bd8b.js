'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','section'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/tech-writting/docs/one/words/','title':"Words",'section':"One",'content':"遣词造句 我们对文档进行了大量研究，结论就是，要写出好的句子，主要看如何使用词汇。\n给出新词条的定义 写作或者编辑的时候，学会识别出哪些词条你的部分或全部读者会不熟悉。若存在这样的词条，可以采取以下两种策略：\n 如果词条已经存在，链接至一个已有的、正确的解释。（不重复造轮子。） 如果你的文档要详细介绍这个词条，那么给出它的定义。如果你的文档要介绍多个词条，把它们的定义放到一个术语表中。  对词条的使用要一致 如果你在方法中换用不同的变量名代表同一个内容，你的代码无法完成编译。类似地，如果你在文档中突然换用另一个词条名，你的想法也没办法在读者脑海中编译成功。\n规范就是：在整篇文档中都使用一致的、含义清晰的词或词条（来指代同一个事物）。你如果称了它为这东西（thingy），就不要再改称为这样物品（thingamabob）。比如，以下的示例段落错误地将 Protocol Buffers 改称为 protobufs：\n Protocol Buffers 提供了它自己的定义语言。Blah，blah，blah。这就是为什么 protobufs 能有这么大的市场。\n 如你所见，技术写作似乎很难，很多表达受限，但是它也提供了一些灵活变通的方法，即，当引入一个很长的概念术语或者产品名称的时候，你可以明确定义它的缩写。其后，你就可以在整篇文档中使用该缩写。举个例子，以下段落就没出现之前的错误：\n Protocol Buffers（以下简称 protobufs） 提供了它自己的定义语言。Blah，blah，blah。这就是为什么 protobufs 能有这么大的市场。\n 正确使用首字母缩写 "});})();